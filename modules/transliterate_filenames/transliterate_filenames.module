<?php

/**
 * @file
 * Contains transliterate_filenames.module.
 */

use Drupal\file\FileInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function transliterate_filenames_help($route_name, RouteMatchInterface $route_match) {
  return '';
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function transliterate_filenames_file_presave(FileInterface $file) {
  $file_system = \Drupal::service('file_system');
  $basename = \Drupal::service('file_system')->basename($file->getFileUri());
  $basename = transliterate_filenames_transliteration($basename);
  $dirname = \Drupal::service('file_system')->dirname($file->getFileUri());
  $uri = $dirname . '/' . $basename;
  if ($new_uri = $file_system->move($file->getFileUri(), $uri, \Drupal\Core\File\FileSystemInterface::EXISTS_RENAME)) {
    $file->set('uri', $new_uri);
  }
}

/**
 * Implements callback for hook_file_validate().
 */
function transliterate_filenames_transliteration($filename) {
  $filename = \Drupal::service('transliterate_filenames.sanitize_name')->sanitizeFilename($filename);

  // For empty.
  $name = explode('.', $filename);
  $name = reset($name);
  $extension = explode(".", $filename);
  $extension = end($extension);

  // Is empty.
  if (!$name) {
    $filename = md5(rand()) . '.' . $extension;
  }

  return $filename;
}
